name: DVWA CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-and-push-dev:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository - loads the code to the runner
      uses: actions/checkout@v3
    
    - name: Login to JFrog Docker Registry
      run: echo "${{ secrets.JFROG_PASSWORD }}" | docker login ${{ secrets.DOCKER_REPO_DEV }} --username ${{ secrets.JFROG_USERNAME }} --password-stdin
    
    - name: Docker image build
      run: docker build -t dvwa:latest .
    
    - name: Generate image tag
      run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    
    - name: Debug tag output
      run: echo "${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG"

    - name: docker tag points to jfrog dev docker repo with dynamic image tag
      run: docker tag dvwa:latest ${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG

    - name: Push image to JFrog Dev
      run: docker push ${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG
    - name: Install and configure JFrog CLI
      run: |
        curl -fL https://install-cli.jfrog.io | sh
        jf config add jfrog-server \
          --url=${{ secrets.JFROG_URL }} \
          --user=${{ secrets.JFROG_USERNAME }} \
          --password=${{ secrets.JFROG_PASSWORD }}
    - name: setting env vars so following scans can use
      run: | 
        echo "BUILD_NAME=dvwa-ci" >> $GITHUB_ENV
        echo "BUILD_NUMBER=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    - name: re-pushing image with it's metadate for following scans
      run: |
        jf  rt docker-push ${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG docker-dev \
        --build-name=$BUILD_NAME \
        --build-number=$BUILD_NUMBER
    - name: Collect environment variables
      run: jf  rt build-collect-env $BUILD_NAME $BUILD_NUMBER
    - name: Publish the build metadata so XRAY will be able to find it as it requires JFROG build
      run: jf  rt build-publish $BUILD_NAME $BUILD_NUMBER
  test-scan-and-verify:
      needs: build-and-push-dev
      runs-on: ubuntu-latest
      environment:
        name: test
      steps:
      - name: Awaiting manual approval before scan and test
        run: echo "Test stage approved. Ready to run scans and validations."
      - name: authenticating JFROG to pull the dev repo
        run: echo "${{ secrets.JFROG_PASSWORD }}" | docker login ${{ secrets.DOCKER_REPO_DEV }} --username ${{ secrets.JFROG_USERNAME }} --password-stdin 
      - name: pulling the dev image(dev-$TAG)
        run: docker pull ${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG
      - name: running the image within a container
        run: docker run -d -p 80:80 --name dvwa-test ${{ secrets.DOCKER_REPO_DEV }}/dvwa:dev-$TAG
      - name: checking dvwa runs
        run: |
          STATUS=$(curl -o /dev/null -s -w "%{http_code}" http://127.0.0.1:80)
          if [ "$STATUS" -eq 200 ]; then
            echo "DVWA is running successfully: HTTP 200 OK"
          else
            echo "DVWA failed to respond properly. Status: $STATUS"
            exit 1
          fi
      - name: terminate dvwa docker container
        run: docker stop dvwa-test
      - name: Install and configure JFrog CLI
        run: |
          curl -fL https://install-cli.jfrog.io | sh
          jf  config add jfrog-server \
            --url=${{ secrets.JFROG_URL }} \
            --user=${{ secrets.JFROG_USERNAME }} \
            --password=${{ secrets.JFROG_PASSWORD }}
      - name: Xray scan within jfrog over the JFROG build using the image in the previous job
        run: jf  xray scan --build=$BUILD_NAME/$BUILD_NUMBER
